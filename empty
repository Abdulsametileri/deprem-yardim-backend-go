CONFIG_FILE=/home/ubuntu/prometheus.yml
CLUSTER=base-cluster
TASK_NAME=api-go-service
TEMP_FILE=/home/ubuntu/cron-jobs/$TASK_NAME.temp.yml

TASK_ARNS=$(aws ecs list-tasks --cluster ${CLUSTER} --service-name ${TASK_NAME} | jq -r ".taskArns[]")
TASK_DATA=$(aws ecs describe-tasks --cluster base-cluster --tasks $TASK_ARNS | jq -r '.tasks[] | {taskDefinition: .taskDefinitionArn, ip: .containers[].networkInterfaces[].privateIpv4Address}')

cp $CONFIG_FILE $TEMP_FILE

yq -i ".scrape_configs[].static_configs = []" $CONFIG_FILE

for row in $(echo "${TASK_DATA}" | jq -r '. | @base64'); do
  _jq() {
    echo ${row} | base64 --decode | jq -r ${1}
  }
  IP=$(_jq '.ip')
  TASK_DEFINITION=$(_jq '.taskDefinition')
  VERSION=${TASK_DEFINITION##*:}
  yq -i ".scrape_configs[0].static_configs += {\"targets\": [\"${IP}\"], \"labels\": {\"version\": \"${VERSION}\"}}" $CONFIG_FILE
done

CONTAINERNAME='postgres-exporter'
CONTAINERID="$(docker ps | grep -i $CONTAINERNAME | awk '{print $1}')"
CONTAINERIP="$(docker inspect -f '{{range.NetworkSettings.Networks}}{{.IPAddress}}{{end}}' $CONTAINERID)"

yq -i ".scrape_configs[1].static_configs += {\"targets\": [\"172.17.0.1:9187\"]}" $CONFIG_FILE

if ! cmp -s $CONFIG_FILE $TEMP_FILE
then
  docker restart prometheus
fi